// For our assignment, we will be defining some application-level
// message formats, just like HTTP has GET, PUT, POST etc. 
//
// We have to define a namespace under which this schema gets
// translated to the programming language we are using.
// Let us call it CustomAppProto

namespace CustomAppProto;

enum DispenserOptions: byte
{
   OPTIMAL,
   PARTIAL,
   BLOCKAGE
}

enum LightStatus: byte
{
   GOOD,
   BAD
}

enum SensorStatus: byte
{
   GOOD,
   BAD
}

table Health
{
   seq_no: uint32;   // this is like the seq num in a TCP segment
   ts: double;       // say this is the timestamp
   name: string;      // say this is some descriptive string
   data: [uint32];    // say this is some blob of binary data

   dispenser: DispenserOptions;
   icemaker: int32;
   lightbulb: LightStatus;
   fridge_temp: int32;
   freezer_temp: int32;
   sensor_status: SensorStatus;
   humidity: double;
   door_openings: uint32;
}

// indicate what is the top level structure from where the serialization starts.
// The reason we need this is because we may have a very complicated nested
// data structure and so we need to tell the compiler the starting point.

root_type Health;
